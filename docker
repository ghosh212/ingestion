# Stage 1: Build the Go application
FROM golang:1.24.3 AS builder

# Set the working directory inside the container.
WORKDIR /app

# Copy go.mod and go.sum first to leverage Docker's build cache.
# If these files don't change, Docker won't re-download modules.
COPY go.mod .
COPY go.sum .

# Download Go modules. This step is cached if go.mod/go.sum haven't changed.
RUN go mod download

# Copy the rest of the application source code into the working directory.
COPY . .

RUN CGO_ENABLED=0 go build -ldflags "-s -w" -o /app/go-app .

FROM alpine:latest

WORKDIR /app

COPY --from=builder /app/go-app .

# Expose the port that the application listens on.
EXPOSE 8080

# Command to run the application when the container starts.
CMD ["./go-app"]